package data

// Code generated by gen.py. DO NOT EDIT.

// float64

// MustFloat64 extracts a value of type float64 from an observation. Panics on error.
func (o Observation) MustFloat64() float64 {
	return o.value.(float64)
}

// Float64 extracts a value of type float64 from an observation. Returns false on error.
func (o Observation) Float64() (float64, bool) {
	if o.IsNull() {
		return float64(0), false
	} else {
		return o.MustFloat64(), true
	}
}

// int64

// MustInt64 extracts a value of type int64 from an observation. Panics on error.
func (o Observation) MustInt64() int64 {
	return o.value.(int64)
}

// Int64 extracts a value of type int64 from an observation. Returns false on error.
func (o Observation) Int64() (int64, bool) {
	if o.IsNull() {
		return int64(0), false
	} else {
		return o.MustInt64(), true
	}
}

// string

// MustString extracts a value of type string from an observation. Panics on error.
func (o Observation) MustString() string {
	return o.value.(string)
}

// String extracts a value of type string from an observation. Returns false on error.
func (o Observation) String() (string, bool) {
	if o.IsNull() {
		return "", false
	} else {
		return o.MustString(), true
	}
}

// bool

// MustBool extracts a value of type bool from an observation. Panics on error.
func (o Observation) MustBool() bool {
	return o.value.(bool)
}

// Bool extracts a value of type bool from an observation. Returns false on error.
func (o Observation) Bool() (bool, bool) {
	if o.IsNull() {
		return false, false
	} else {
		return o.MustBool(), true
	}
}

// TimestampMillis

// MustTimestampMillis extracts a value of type TimestampMillis from an observation. Panics on error.
func (o Observation) MustTimestampMillis() TimestampMillis {
	return o.value.(TimestampMillis)
}

// TimestampMillis extracts a value of type TimestampMillis from an observation. Returns false on error.
func (o Observation) TimestampMillis() (TimestampMillis, bool) {
	if o.IsNull() {
		return TimestampMillis(0), false
	} else {
		return o.MustTimestampMillis(), true
	}
}

// TimestampMicros

// MustTimestampMicros extracts a value of type TimestampMicros from an observation. Panics on error.
func (o Observation) MustTimestampMicros() TimestampMicros {
	return o.value.(TimestampMicros)
}

// TimestampMicros extracts a value of type TimestampMicros from an observation. Returns false on error.
func (o Observation) TimestampMicros() (TimestampMicros, bool) {
	if o.IsNull() {
		return TimestampMicros(0), false
	} else {
		return o.MustTimestampMicros(), true
	}
}
