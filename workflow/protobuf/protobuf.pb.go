// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/protobuf.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protobuf "github.com/Synthace/microservice/cmd/element/protobuf"
import protobuf1 "github.com/Synthace/microservice/cmd/inventory/protobuf"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	roles "github.com/Synthace/api-defs/syn/api/roles"
	types "github.com/Synthace/api-defs/syn/api/auth/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Expose well known device classes. Stringified versions in Device.class.
type DeviceClass int32

const (
	DeviceClass_NO_DEVICE              DeviceClass = 0
	DeviceClass_CYBIO_GENETHEATRE      DeviceClass = 1
	DeviceClass_CYBIO_FELIX            DeviceClass = 2
	DeviceClass_GILSON_PIPETMAX        DeviceClass = 3
	DeviceClass_QINSTRUMENTS_BIOSHAKE  DeviceClass = 4
	DeviceClass_TECAN_LIQUIDHANDLER    DeviceClass = 5
	DeviceClass_GENERIC_DATASOURCE     DeviceClass = 6
	DeviceClass_WRITEONLY_PLATEREADER  DeviceClass = 7
	DeviceClass_QPCR_DEVICE            DeviceClass = 8
	DeviceClass_LABCYTE_ECHO_520       DeviceClass = 9
	DeviceClass_LABCYTE_ECHO_525       DeviceClass = 10
	DeviceClass_LABCYTE_ECHO_550       DeviceClass = 11
	DeviceClass_LABCYTE_ECHO_555       DeviceClass = 12
	DeviceClass_HAMILTON_MICROLAB_STAR DeviceClass = 13
)

var DeviceClass_name = map[int32]string{
	0:  "NO_DEVICE",
	1:  "CYBIO_GENETHEATRE",
	2:  "CYBIO_FELIX",
	3:  "GILSON_PIPETMAX",
	4:  "QINSTRUMENTS_BIOSHAKE",
	5:  "TECAN_LIQUIDHANDLER",
	6:  "GENERIC_DATASOURCE",
	7:  "WRITEONLY_PLATEREADER",
	8:  "QPCR_DEVICE",
	9:  "LABCYTE_ECHO_520",
	10: "LABCYTE_ECHO_525",
	11: "LABCYTE_ECHO_550",
	12: "LABCYTE_ECHO_555",
	13: "HAMILTON_MICROLAB_STAR",
}
var DeviceClass_value = map[string]int32{
	"NO_DEVICE":              0,
	"CYBIO_GENETHEATRE":      1,
	"CYBIO_FELIX":            2,
	"GILSON_PIPETMAX":        3,
	"QINSTRUMENTS_BIOSHAKE":  4,
	"TECAN_LIQUIDHANDLER":    5,
	"GENERIC_DATASOURCE":     6,
	"WRITEONLY_PLATEREADER":  7,
	"QPCR_DEVICE":            8,
	"LABCYTE_ECHO_520":       9,
	"LABCYTE_ECHO_525":       10,
	"LABCYTE_ECHO_550":       11,
	"LABCYTE_ECHO_555":       12,
	"HAMILTON_MICROLAB_STAR": 13,
}

func (x DeviceClass) String() string {
	return proto.EnumName(DeviceClass_name, int32(x))
}
func (DeviceClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{0}
}

// Stages for execution
type ComponentStage int32

const (
	ComponentStage_STEPS    ComponentStage = 0
	ComponentStage_ANALYSIS ComponentStage = 1
)

var ComponentStage_name = map[int32]string{
	0: "STEPS",
	1: "ANALYSIS",
}
var ComponentStage_value = map[string]int32{
	"STEPS":    0,
	"ANALYSIS": 1,
}

func (x ComponentStage) String() string {
	return proto.EnumName(ComponentStage_name, int32(x))
}
func (ComponentStage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{1}
}

type HealthCheckMessage struct {
	Status               string   `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckMessage) Reset()         { *m = HealthCheckMessage{} }
func (m *HealthCheckMessage) String() string { return proto.CompactTextString(m) }
func (*HealthCheckMessage) ProtoMessage()    {}
func (*HealthCheckMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{0}
}
func (m *HealthCheckMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckMessage.Unmarshal(m, b)
}
func (m *HealthCheckMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckMessage.Marshal(b, m, deterministic)
}
func (dst *HealthCheckMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckMessage.Merge(dst, src)
}
func (m *HealthCheckMessage) XXX_Size() int {
	return xxx_messageInfo_HealthCheckMessage.Size(m)
}
func (m *HealthCheckMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckMessage proto.InternalMessageInfo

func (m *HealthCheckMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Metadata struct {
	Elements             []*protobuf.Element `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{1}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetElements() []*protobuf.Element {
	if m != nil {
		return m.Elements
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{2}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type SimulateRequest struct {
	// Devices to consider when planning this request.
	Available []*Device `protobuf:"bytes,1,rep,name=available" json:"available,omitempty"`
	// Processes in this request.
	Processes []*Process `protobuf:"bytes,2,rep,name=processes" json:"processes,omitempty"`
	// Connections between processes.
	Connections []*Connection `protobuf:"bytes,3,rep,name=connections" json:"connections,omitempty"`
	// Mixer configuration for this request.
	MixerConfig *MixerConfig `protobuf:"bytes,4,opt,name=mixer_config,json=mixerConfig" json:"mixer_config,omitempty"`
	// A string that will be used to decorate files.
	PrettyFilePrefix string `protobuf:"bytes,5,opt,name=pretty_file_prefix,json=prettyFilePrefix" json:"pretty_file_prefix,omitempty"`
	// Plate types to initialize inventory with for this run.
	PlateTypes           []*protobuf1.PlateType `protobuf:"bytes,6,rep,name=plate_types,json=plateTypes" json:"plate_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SimulateRequest) Reset()         { *m = SimulateRequest{} }
func (m *SimulateRequest) String() string { return proto.CompactTextString(m) }
func (*SimulateRequest) ProtoMessage()    {}
func (*SimulateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{3}
}
func (m *SimulateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulateRequest.Unmarshal(m, b)
}
func (m *SimulateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulateRequest.Marshal(b, m, deterministic)
}
func (dst *SimulateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulateRequest.Merge(dst, src)
}
func (m *SimulateRequest) XXX_Size() int {
	return xxx_messageInfo_SimulateRequest.Size(m)
}
func (m *SimulateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimulateRequest proto.InternalMessageInfo

func (m *SimulateRequest) GetAvailable() []*Device {
	if m != nil {
		return m.Available
	}
	return nil
}

func (m *SimulateRequest) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *SimulateRequest) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

func (m *SimulateRequest) GetMixerConfig() *MixerConfig {
	if m != nil {
		return m.MixerConfig
	}
	return nil
}

func (m *SimulateRequest) GetPrettyFilePrefix() string {
	if m != nil {
		return m.PrettyFilePrefix
	}
	return ""
}

func (m *SimulateRequest) GetPlateTypes() []*protobuf1.PlateType {
	if m != nil {
		return m.PlateTypes
	}
	return nil
}

type SimulateResponse struct {
	// Types that are valid to be assigned to Response:
	//	*SimulateResponse_Report
	//	*SimulateResponse_Stdout
	//	*SimulateResponse_Stderr
	//	*SimulateResponse_Error
	Response             isSimulateResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SimulateResponse) Reset()         { *m = SimulateResponse{} }
func (m *SimulateResponse) String() string { return proto.CompactTextString(m) }
func (*SimulateResponse) ProtoMessage()    {}
func (*SimulateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{4}
}
func (m *SimulateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulateResponse.Unmarshal(m, b)
}
func (m *SimulateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulateResponse.Marshal(b, m, deterministic)
}
func (dst *SimulateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulateResponse.Merge(dst, src)
}
func (m *SimulateResponse) XXX_Size() int {
	return xxx_messageInfo_SimulateResponse.Size(m)
}
func (m *SimulateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimulateResponse proto.InternalMessageInfo

type isSimulateResponse_Response interface {
	isSimulateResponse_Response()
}

type SimulateResponse_Report struct {
	Report *Report `protobuf:"bytes,1,opt,name=report,oneof"`
}
type SimulateResponse_Stdout struct {
	Stdout []byte `protobuf:"bytes,2,opt,name=stdout,proto3,oneof"`
}
type SimulateResponse_Stderr struct {
	Stderr []byte `protobuf:"bytes,3,opt,name=stderr,proto3,oneof"`
}
type SimulateResponse_Error struct {
	Error string `protobuf:"bytes,4,opt,name=error,oneof"`
}

func (*SimulateResponse_Report) isSimulateResponse_Response() {}
func (*SimulateResponse_Stdout) isSimulateResponse_Response() {}
func (*SimulateResponse_Stderr) isSimulateResponse_Response() {}
func (*SimulateResponse_Error) isSimulateResponse_Response()  {}

func (m *SimulateResponse) GetResponse() isSimulateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SimulateResponse) GetReport() *Report {
	if x, ok := m.GetResponse().(*SimulateResponse_Report); ok {
		return x.Report
	}
	return nil
}

func (m *SimulateResponse) GetStdout() []byte {
	if x, ok := m.GetResponse().(*SimulateResponse_Stdout); ok {
		return x.Stdout
	}
	return nil
}

func (m *SimulateResponse) GetStderr() []byte {
	if x, ok := m.GetResponse().(*SimulateResponse_Stderr); ok {
		return x.Stderr
	}
	return nil
}

func (m *SimulateResponse) GetError() string {
	if x, ok := m.GetResponse().(*SimulateResponse_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimulateResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimulateResponse_OneofMarshaler, _SimulateResponse_OneofUnmarshaler, _SimulateResponse_OneofSizer, []interface{}{
		(*SimulateResponse_Report)(nil),
		(*SimulateResponse_Stdout)(nil),
		(*SimulateResponse_Stderr)(nil),
		(*SimulateResponse_Error)(nil),
	}
}

func _SimulateResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimulateResponse)
	// response
	switch x := m.Response.(type) {
	case *SimulateResponse_Report:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Report); err != nil {
			return err
		}
	case *SimulateResponse_Stdout:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Stdout)
	case *SimulateResponse_Stderr:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Stderr)
	case *SimulateResponse_Error:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Error)
	case nil:
	default:
		return fmt.Errorf("SimulateResponse.Response has unexpected type %T", x)
	}
	return nil
}

func _SimulateResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimulateResponse)
	switch tag {
	case 1: // response.report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Report)
		err := b.DecodeMessage(msg)
		m.Response = &SimulateResponse_Report{msg}
		return true, err
	case 2: // response.stdout
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Response = &SimulateResponse_Stdout{x}
		return true, err
	case 3: // response.stderr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Response = &SimulateResponse_Stderr{x}
		return true, err
	case 4: // response.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Response = &SimulateResponse_Error{x}
		return true, err
	default:
		return false, nil
	}
}

func _SimulateResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimulateResponse)
	// response
	switch x := m.Response.(type) {
	case *SimulateResponse_Report:
		s := proto.Size(x.Report)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimulateResponse_Stdout:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Stdout)))
		n += len(x.Stdout)
	case *SimulateResponse_Stderr:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Stderr)))
		n += len(x.Stderr)
	case *SimulateResponse_Error:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Error)))
		n += len(x.Error)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// SimulateCommandResponse is to communicate between subprocesses like
// antha-simulator and the antha-runner server
type SimulateCommandResponse struct {
	// Types that are valid to be assigned to Response:
	//	*SimulateCommandResponse_Report
	//	*SimulateCommandResponse_Error
	Response             isSimulateCommandResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SimulateCommandResponse) Reset()         { *m = SimulateCommandResponse{} }
func (m *SimulateCommandResponse) String() string { return proto.CompactTextString(m) }
func (*SimulateCommandResponse) ProtoMessage()    {}
func (*SimulateCommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{5}
}
func (m *SimulateCommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulateCommandResponse.Unmarshal(m, b)
}
func (m *SimulateCommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulateCommandResponse.Marshal(b, m, deterministic)
}
func (dst *SimulateCommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulateCommandResponse.Merge(dst, src)
}
func (m *SimulateCommandResponse) XXX_Size() int {
	return xxx_messageInfo_SimulateCommandResponse.Size(m)
}
func (m *SimulateCommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulateCommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimulateCommandResponse proto.InternalMessageInfo

type isSimulateCommandResponse_Response interface {
	isSimulateCommandResponse_Response()
}

type SimulateCommandResponse_Report struct {
	Report *Report `protobuf:"bytes,1,opt,name=report,oneof"`
}
type SimulateCommandResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"`
}

func (*SimulateCommandResponse_Report) isSimulateCommandResponse_Response() {}
func (*SimulateCommandResponse_Error) isSimulateCommandResponse_Response()  {}

func (m *SimulateCommandResponse) GetResponse() isSimulateCommandResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SimulateCommandResponse) GetReport() *Report {
	if x, ok := m.GetResponse().(*SimulateCommandResponse_Report); ok {
		return x.Report
	}
	return nil
}

func (m *SimulateCommandResponse) GetError() string {
	if x, ok := m.GetResponse().(*SimulateCommandResponse_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimulateCommandResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimulateCommandResponse_OneofMarshaler, _SimulateCommandResponse_OneofUnmarshaler, _SimulateCommandResponse_OneofSizer, []interface{}{
		(*SimulateCommandResponse_Report)(nil),
		(*SimulateCommandResponse_Error)(nil),
	}
}

func _SimulateCommandResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimulateCommandResponse)
	// response
	switch x := m.Response.(type) {
	case *SimulateCommandResponse_Report:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Report); err != nil {
			return err
		}
	case *SimulateCommandResponse_Error:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Error)
	case nil:
	default:
		return fmt.Errorf("SimulateCommandResponse.Response has unexpected type %T", x)
	}
	return nil
}

func _SimulateCommandResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimulateCommandResponse)
	switch tag {
	case 1: // response.report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Report)
		err := b.DecodeMessage(msg)
		m.Response = &SimulateCommandResponse_Report{msg}
		return true, err
	case 2: // response.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Response = &SimulateCommandResponse_Error{x}
		return true, err
	default:
		return false, nil
	}
}

func _SimulateCommandResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimulateCommandResponse)
	// response
	switch x := m.Response.(type) {
	case *SimulateCommandResponse_Report:
		s := proto.Size(x.Report)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimulateCommandResponse_Error:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Error)))
		n += len(x.Error)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Output of simulation.
type Report struct {
	// Tasks in this report.
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	// Processes in this report.
	Processes []*Process `protobuf:"bytes,2,rep,name=processes" json:"processes,omitempty"`
	// Connection between processes.
	Connections          []*Connection `protobuf:"bytes,3,rep,name=connections" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{6}
}
func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (dst *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(dst, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Report) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Report) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

// Representation of a device.
type Device struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Device class. Should be one of DeviceClass.
	Class                string   `protobuf:"bytes,2,opt,name=class" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{7}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (dst *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(dst, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Device) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

// PlateIds a list of plate ids
type PlateIds struct {
	PlateIds             []string `protobuf:"bytes,1,rep,name=plate_ids,json=plateIds" json:"plate_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlateIds) Reset()         { *m = PlateIds{} }
func (m *PlateIds) String() string { return proto.CompactTextString(m) }
func (*PlateIds) ProtoMessage()    {}
func (*PlateIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{8}
}
func (m *PlateIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlateIds.Unmarshal(m, b)
}
func (m *PlateIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlateIds.Marshal(b, m, deterministic)
}
func (dst *PlateIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlateIds.Merge(dst, src)
}
func (m *PlateIds) XXX_Size() int {
	return xxx_messageInfo_PlateIds.Size(m)
}
func (m *PlateIds) XXX_DiscardUnknown() {
	xxx_messageInfo_PlateIds.DiscardUnknown(m)
}

var xxx_messageInfo_PlateIds proto.InternalMessageInfo

func (m *PlateIds) GetPlateIds() []string {
	if m != nil {
		return m.PlateIds
	}
	return nil
}

// Plates a list of plates
type Plates struct {
	Plates               []*protobuf1.Plate `protobuf:"bytes,1,rep,name=plates" json:"plates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Plates) Reset()         { *m = Plates{} }
func (m *Plates) String() string { return proto.CompactTextString(m) }
func (*Plates) ProtoMessage()    {}
func (*Plates) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{9}
}
func (m *Plates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plates.Unmarshal(m, b)
}
func (m *Plates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plates.Marshal(b, m, deterministic)
}
func (dst *Plates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plates.Merge(dst, src)
}
func (m *Plates) XXX_Size() int {
	return xxx_messageInfo_Plates.Size(m)
}
func (m *Plates) XXX_DiscardUnknown() {
	xxx_messageInfo_Plates.DiscardUnknown(m)
}

var xxx_messageInfo_Plates proto.InternalMessageInfo

func (m *Plates) GetPlates() []*protobuf1.Plate {
	if m != nil {
		return m.Plates
	}
	return nil
}

// Configuration of a mixer.
type MixerConfig struct {
	// Types that are valid to be assigned to InputPlates:
	//	*MixerConfig_InputPlateVals
	//	*MixerConfig_InputPlateIds
	InputPlates isMixerConfig_InputPlates `protobuf_oneof:"input_plates"`
	// Output plates to add to planning configuration and consider when
	// planning.
	//
	// Types that are valid to be assigned to OutputPlates:
	//	*MixerConfig_OutputPlateVals
	//	*MixerConfig_OutputPlateIds
	OutputPlates isMixerConfig_OutputPlates `protobuf_oneof:"output_plates"`
	// Deprecated. Replace with input_plates.
	InputPlateTypes []string `protobuf:"bytes,3,rep,name=input_plate_types,json=inputPlateTypes" json:"input_plate_types,omitempty"`
	// Deprecated. Replace with output_plates.
	OutputPlateTypes []string `protobuf:"bytes,4,rep,name=output_plate_types,json=outputPlateTypes" json:"output_plate_types,omitempty"`
	// Deprecated. TODO create tips field.
	TipTypes []string `protobuf:"bytes,5,rep,name=tip_types,json=tipTypes" json:"tip_types,omitempty"`
	// Maximum number of plates.
	MaxPlates float64 `protobuf:"fixed64,6,opt,name=max_plates,json=maxPlates" json:"max_plates,omitempty"`
	// Maximum number of wells.
	MaxWells             float64 `protobuf:"fixed64,7,opt,name=max_wells,json=maxWells" json:"max_wells,omitempty"`
	ResidualVolumeWeight float64 `protobuf:"fixed64,8,opt,name=residual_volume_weight,json=residualVolumeWeight" json:"residual_volume_weight,omitempty"`
	ModelEvaporation     bool    `protobuf:"varint,10,opt,name=model_evaporation,json=modelEvaporation" json:"model_evaporation,omitempty"`
	OutputSort           bool    `protobuf:"varint,11,opt,name=output_sort,json=outputSort" json:"output_sort,omitempty"`
	// Driver specific options. Semantics are not stable. Will need to be
	// revised when multi device execution is supported.
	DriverSpecificInputPreferences    []string `protobuf:"bytes,12,rep,name=driver_specific_input_preferences,json=driverSpecificInputPreferences" json:"driver_specific_input_preferences,omitempty"`
	DriverSpecificOutputPreferences   []string `protobuf:"bytes,13,rep,name=driver_specific_output_preferences,json=driverSpecificOutputPreferences" json:"driver_specific_output_preferences,omitempty"`
	DriverSpecificTipPreferences      []string `protobuf:"bytes,14,rep,name=driver_specific_tip_preferences,json=driverSpecificTipPreferences" json:"driver_specific_tip_preferences,omitempty"`
	DriverSpecificTipWastePreferences []string `protobuf:"bytes,15,rep,name=driver_specific_tip_waste_preferences,json=driverSpecificTipWastePreferences" json:"driver_specific_tip_waste_preferences,omitempty"`
	DriverSpecificWashPreferences     []string `protobuf:"bytes,16,rep,name=driver_specific_wash_preferences,json=driverSpecificWashPreferences" json:"driver_specific_wash_preferences,omitempty"`
	// which version of the planner should be used
	PlanningVersion string `protobuf:"bytes,17,opt,name=planning_version,json=planningVersion" json:"planning_version,omitempty"`
	// request use of driver tip tracking if available
	UseDriverTipTracking bool `protobuf:"varint,18,opt,name=use_driver_tip_tracking,json=useDriverTipTracking" json:"use_driver_tip_tracking,omitempty"`
	// Devices that should be considered when planning this request.
	DeviceIds                       []string `protobuf:"bytes,20,rep,name=device_ids,json=deviceIds" json:"device_ids,omitempty"`
	LiquidHandlingPolicyXlsxJmpFile []byte   `protobuf:"bytes,25,opt,name=liquid_handling_policy_xlsx_jmp_file,json=liquidHandlingPolicyXlsxJmpFile,proto3" json:"liquid_handling_policy_xlsx_jmp_file,omitempty"`
	// ignore errors from physical simulation of the workflow as a workaround
	IgnorePhysicalSimulation bool     `protobuf:"varint,26,opt,name=ignore_physical_simulation,json=ignorePhysicalSimulation" json:"ignore_physical_simulation,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MixerConfig) Reset()         { *m = MixerConfig{} }
func (m *MixerConfig) String() string { return proto.CompactTextString(m) }
func (*MixerConfig) ProtoMessage()    {}
func (*MixerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{10}
}
func (m *MixerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixerConfig.Unmarshal(m, b)
}
func (m *MixerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixerConfig.Marshal(b, m, deterministic)
}
func (dst *MixerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixerConfig.Merge(dst, src)
}
func (m *MixerConfig) XXX_Size() int {
	return xxx_messageInfo_MixerConfig.Size(m)
}
func (m *MixerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MixerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MixerConfig proto.InternalMessageInfo

type isMixerConfig_InputPlates interface {
	isMixerConfig_InputPlates()
}
type isMixerConfig_OutputPlates interface {
	isMixerConfig_OutputPlates()
}

type MixerConfig_InputPlateVals struct {
	InputPlateVals *Plates `protobuf:"bytes,21,opt,name=input_plate_vals,json=inputPlateVals,oneof"`
}
type MixerConfig_InputPlateIds struct {
	InputPlateIds *PlateIds `protobuf:"bytes,22,opt,name=input_plate_ids,json=inputPlateIds,oneof"`
}
type MixerConfig_OutputPlateVals struct {
	OutputPlateVals *Plates `protobuf:"bytes,23,opt,name=output_plate_vals,json=outputPlateVals,oneof"`
}
type MixerConfig_OutputPlateIds struct {
	OutputPlateIds *PlateIds `protobuf:"bytes,24,opt,name=output_plate_ids,json=outputPlateIds,oneof"`
}

func (*MixerConfig_InputPlateVals) isMixerConfig_InputPlates()   {}
func (*MixerConfig_InputPlateIds) isMixerConfig_InputPlates()    {}
func (*MixerConfig_OutputPlateVals) isMixerConfig_OutputPlates() {}
func (*MixerConfig_OutputPlateIds) isMixerConfig_OutputPlates()  {}

func (m *MixerConfig) GetInputPlates() isMixerConfig_InputPlates {
	if m != nil {
		return m.InputPlates
	}
	return nil
}
func (m *MixerConfig) GetOutputPlates() isMixerConfig_OutputPlates {
	if m != nil {
		return m.OutputPlates
	}
	return nil
}

func (m *MixerConfig) GetInputPlateVals() *Plates {
	if x, ok := m.GetInputPlates().(*MixerConfig_InputPlateVals); ok {
		return x.InputPlateVals
	}
	return nil
}

func (m *MixerConfig) GetInputPlateIds() *PlateIds {
	if x, ok := m.GetInputPlates().(*MixerConfig_InputPlateIds); ok {
		return x.InputPlateIds
	}
	return nil
}

func (m *MixerConfig) GetOutputPlateVals() *Plates {
	if x, ok := m.GetOutputPlates().(*MixerConfig_OutputPlateVals); ok {
		return x.OutputPlateVals
	}
	return nil
}

func (m *MixerConfig) GetOutputPlateIds() *PlateIds {
	if x, ok := m.GetOutputPlates().(*MixerConfig_OutputPlateIds); ok {
		return x.OutputPlateIds
	}
	return nil
}

func (m *MixerConfig) GetInputPlateTypes() []string {
	if m != nil {
		return m.InputPlateTypes
	}
	return nil
}

func (m *MixerConfig) GetOutputPlateTypes() []string {
	if m != nil {
		return m.OutputPlateTypes
	}
	return nil
}

func (m *MixerConfig) GetTipTypes() []string {
	if m != nil {
		return m.TipTypes
	}
	return nil
}

func (m *MixerConfig) GetMaxPlates() float64 {
	if m != nil {
		return m.MaxPlates
	}
	return 0
}

func (m *MixerConfig) GetMaxWells() float64 {
	if m != nil {
		return m.MaxWells
	}
	return 0
}

func (m *MixerConfig) GetResidualVolumeWeight() float64 {
	if m != nil {
		return m.ResidualVolumeWeight
	}
	return 0
}

func (m *MixerConfig) GetModelEvaporation() bool {
	if m != nil {
		return m.ModelEvaporation
	}
	return false
}

func (m *MixerConfig) GetOutputSort() bool {
	if m != nil {
		return m.OutputSort
	}
	return false
}

func (m *MixerConfig) GetDriverSpecificInputPreferences() []string {
	if m != nil {
		return m.DriverSpecificInputPreferences
	}
	return nil
}

func (m *MixerConfig) GetDriverSpecificOutputPreferences() []string {
	if m != nil {
		return m.DriverSpecificOutputPreferences
	}
	return nil
}

func (m *MixerConfig) GetDriverSpecificTipPreferences() []string {
	if m != nil {
		return m.DriverSpecificTipPreferences
	}
	return nil
}

func (m *MixerConfig) GetDriverSpecificTipWastePreferences() []string {
	if m != nil {
		return m.DriverSpecificTipWastePreferences
	}
	return nil
}

func (m *MixerConfig) GetDriverSpecificWashPreferences() []string {
	if m != nil {
		return m.DriverSpecificWashPreferences
	}
	return nil
}

func (m *MixerConfig) GetPlanningVersion() string {
	if m != nil {
		return m.PlanningVersion
	}
	return ""
}

func (m *MixerConfig) GetUseDriverTipTracking() bool {
	if m != nil {
		return m.UseDriverTipTracking
	}
	return false
}

func (m *MixerConfig) GetDeviceIds() []string {
	if m != nil {
		return m.DeviceIds
	}
	return nil
}

func (m *MixerConfig) GetLiquidHandlingPolicyXlsxJmpFile() []byte {
	if m != nil {
		return m.LiquidHandlingPolicyXlsxJmpFile
	}
	return nil
}

func (m *MixerConfig) GetIgnorePhysicalSimulation() bool {
	if m != nil {
		return m.IgnorePhysicalSimulation
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MixerConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MixerConfig_OneofMarshaler, _MixerConfig_OneofUnmarshaler, _MixerConfig_OneofSizer, []interface{}{
		(*MixerConfig_InputPlateVals)(nil),
		(*MixerConfig_InputPlateIds)(nil),
		(*MixerConfig_OutputPlateVals)(nil),
		(*MixerConfig_OutputPlateIds)(nil),
	}
}

func _MixerConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MixerConfig)
	// input_plates
	switch x := m.InputPlates.(type) {
	case *MixerConfig_InputPlateVals:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InputPlateVals); err != nil {
			return err
		}
	case *MixerConfig_InputPlateIds:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InputPlateIds); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MixerConfig.InputPlates has unexpected type %T", x)
	}
	// output_plates
	switch x := m.OutputPlates.(type) {
	case *MixerConfig_OutputPlateVals:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutputPlateVals); err != nil {
			return err
		}
	case *MixerConfig_OutputPlateIds:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutputPlateIds); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MixerConfig.OutputPlates has unexpected type %T", x)
	}
	return nil
}

func _MixerConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MixerConfig)
	switch tag {
	case 21: // input_plates.input_plate_vals
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Plates)
		err := b.DecodeMessage(msg)
		m.InputPlates = &MixerConfig_InputPlateVals{msg}
		return true, err
	case 22: // input_plates.input_plate_ids
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlateIds)
		err := b.DecodeMessage(msg)
		m.InputPlates = &MixerConfig_InputPlateIds{msg}
		return true, err
	case 23: // output_plates.output_plate_vals
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Plates)
		err := b.DecodeMessage(msg)
		m.OutputPlates = &MixerConfig_OutputPlateVals{msg}
		return true, err
	case 24: // output_plates.output_plate_ids
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlateIds)
		err := b.DecodeMessage(msg)
		m.OutputPlates = &MixerConfig_OutputPlateIds{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MixerConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MixerConfig)
	// input_plates
	switch x := m.InputPlates.(type) {
	case *MixerConfig_InputPlateVals:
		s := proto.Size(x.InputPlateVals)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MixerConfig_InputPlateIds:
		s := proto.Size(x.InputPlateIds)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// output_plates
	switch x := m.OutputPlates.(type) {
	case *MixerConfig_OutputPlateVals:
		s := proto.Size(x.OutputPlateVals)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MixerConfig_OutputPlateIds:
		s := proto.Size(x.OutputPlateIds)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A task that may interact with the physical world.
type Task struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Short description.
	Label string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	// Long description.
	Details string `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`
	// Device id from request that this task should be assigned to.
	DeviceId string `protobuf:"bytes,4,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// Time estimate in seconds, 0 if no estimate available.
	TimeEstimate float64 `protobuf:"fixed64,5,opt,name=time_estimate,json=timeEstimate" json:"time_estimate,omitempty"`
	// Tasks that this task must happen before.
	HappensBefore []string `protobuf:"bytes,6,rep,name=happens_before,json=happensBefore" json:"happens_before,omitempty"`
	// Initial physical state of this task.
	InitialItems []*Item `protobuf:"bytes,7,rep,name=initial_items,json=initialItems" json:"initial_items,omitempty"`
	// Final physical state of this task.
	FinalItems []*Item `protobuf:"bytes,8,rep,name=final_items,json=finalItems" json:"final_items,omitempty"`
	// Mapping if possible of items from the initial state to the final state.
	ItemMappings []*ItemMapping `protobuf:"bytes,9,rep,name=item_mappings,json=itemMappings" json:"item_mappings,omitempty"`
	// Files attached to this task.
	Files []*Param `protobuf:"bytes,10,rep,name=files" json:"files,omitempty"`
	// Calls attaced to this task.
	Calls []*Param `protobuf:"bytes,11,rep,name=calls" json:"calls,omitempty"`
	// Placement of this task on an idealized timeline [0, 1]
	TimeCoord float64 `protobuf:"fixed64,13,opt,name=time_coord,json=timeCoord" json:"time_coord,omitempty"`
	// Specific task configuration
	//
	// Types that are valid to be assigned to Kind:
	//	*Task_MixTask
	//	*Task_PlatePrepTask
	//	*Task_OrderTask
	//	*Task_DeckLayoutTask
	//	*Task_PromptTask
	//	*Task_SetupIncubatorTask
	//	*Task_AwaitTask
	//	*Task_RunTask
	Kind isTask_Kind `protobuf_oneof:"kind"`
	// how many tips are used by this task
	TipEstimate          []*TipInfo `protobuf:"bytes,22,rep,name=tip_estimate,json=tipEstimate" json:"tip_estimate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{11}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

type isTask_Kind interface {
	isTask_Kind()
}

type Task_MixTask struct {
	MixTask *MixTask `protobuf:"bytes,14,opt,name=mix_task,json=mixTask,oneof"`
}
type Task_PlatePrepTask struct {
	PlatePrepTask *PlatePrepTask `protobuf:"bytes,15,opt,name=plate_prep_task,json=platePrepTask,oneof"`
}
type Task_OrderTask struct {
	OrderTask *OrderTask `protobuf:"bytes,16,opt,name=order_task,json=orderTask,oneof"`
}
type Task_DeckLayoutTask struct {
	DeckLayoutTask *DeckLayoutTask `protobuf:"bytes,17,opt,name=deck_layout_task,json=deckLayoutTask,oneof"`
}
type Task_PromptTask struct {
	PromptTask *PromptTask `protobuf:"bytes,18,opt,name=prompt_task,json=promptTask,oneof"`
}
type Task_SetupIncubatorTask struct {
	SetupIncubatorTask *SetupIncubatorTask `protobuf:"bytes,19,opt,name=setup_incubator_task,json=setupIncubatorTask,oneof"`
}
type Task_AwaitTask struct {
	AwaitTask *AwaitTask `protobuf:"bytes,20,opt,name=await_task,json=awaitTask,oneof"`
}
type Task_RunTask struct {
	RunTask *RunTask `protobuf:"bytes,21,opt,name=run_task,json=runTask,oneof"`
}

func (*Task_MixTask) isTask_Kind()            {}
func (*Task_PlatePrepTask) isTask_Kind()      {}
func (*Task_OrderTask) isTask_Kind()          {}
func (*Task_DeckLayoutTask) isTask_Kind()     {}
func (*Task_PromptTask) isTask_Kind()         {}
func (*Task_SetupIncubatorTask) isTask_Kind() {}
func (*Task_AwaitTask) isTask_Kind()          {}
func (*Task_RunTask) isTask_Kind()            {}

func (m *Task) GetKind() isTask_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Task) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Task) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Task) GetTimeEstimate() float64 {
	if m != nil {
		return m.TimeEstimate
	}
	return 0
}

func (m *Task) GetHappensBefore() []string {
	if m != nil {
		return m.HappensBefore
	}
	return nil
}

func (m *Task) GetInitialItems() []*Item {
	if m != nil {
		return m.InitialItems
	}
	return nil
}

func (m *Task) GetFinalItems() []*Item {
	if m != nil {
		return m.FinalItems
	}
	return nil
}

func (m *Task) GetItemMappings() []*ItemMapping {
	if m != nil {
		return m.ItemMappings
	}
	return nil
}

func (m *Task) GetFiles() []*Param {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Task) GetCalls() []*Param {
	if m != nil {
		return m.Calls
	}
	return nil
}

func (m *Task) GetTimeCoord() float64 {
	if m != nil {
		return m.TimeCoord
	}
	return 0
}

func (m *Task) GetMixTask() *MixTask {
	if x, ok := m.GetKind().(*Task_MixTask); ok {
		return x.MixTask
	}
	return nil
}

func (m *Task) GetPlatePrepTask() *PlatePrepTask {
	if x, ok := m.GetKind().(*Task_PlatePrepTask); ok {
		return x.PlatePrepTask
	}
	return nil
}

func (m *Task) GetOrderTask() *OrderTask {
	if x, ok := m.GetKind().(*Task_OrderTask); ok {
		return x.OrderTask
	}
	return nil
}

func (m *Task) GetDeckLayoutTask() *DeckLayoutTask {
	if x, ok := m.GetKind().(*Task_DeckLayoutTask); ok {
		return x.DeckLayoutTask
	}
	return nil
}

func (m *Task) GetPromptTask() *PromptTask {
	if x, ok := m.GetKind().(*Task_PromptTask); ok {
		return x.PromptTask
	}
	return nil
}

func (m *Task) GetSetupIncubatorTask() *SetupIncubatorTask {
	if x, ok := m.GetKind().(*Task_SetupIncubatorTask); ok {
		return x.SetupIncubatorTask
	}
	return nil
}

func (m *Task) GetAwaitTask() *AwaitTask {
	if x, ok := m.GetKind().(*Task_AwaitTask); ok {
		return x.AwaitTask
	}
	return nil
}

func (m *Task) GetRunTask() *RunTask {
	if x, ok := m.GetKind().(*Task_RunTask); ok {
		return x.RunTask
	}
	return nil
}

func (m *Task) GetTipEstimate() []*TipInfo {
	if m != nil {
		return m.TipEstimate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Task) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Task_OneofMarshaler, _Task_OneofUnmarshaler, _Task_OneofSizer, []interface{}{
		(*Task_MixTask)(nil),
		(*Task_PlatePrepTask)(nil),
		(*Task_OrderTask)(nil),
		(*Task_DeckLayoutTask)(nil),
		(*Task_PromptTask)(nil),
		(*Task_SetupIncubatorTask)(nil),
		(*Task_AwaitTask)(nil),
		(*Task_RunTask)(nil),
	}
}

func _Task_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Task)
	// kind
	switch x := m.Kind.(type) {
	case *Task_MixTask:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MixTask); err != nil {
			return err
		}
	case *Task_PlatePrepTask:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlatePrepTask); err != nil {
			return err
		}
	case *Task_OrderTask:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrderTask); err != nil {
			return err
		}
	case *Task_DeckLayoutTask:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeckLayoutTask); err != nil {
			return err
		}
	case *Task_PromptTask:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PromptTask); err != nil {
			return err
		}
	case *Task_SetupIncubatorTask:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetupIncubatorTask); err != nil {
			return err
		}
	case *Task_AwaitTask:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwaitTask); err != nil {
			return err
		}
	case *Task_RunTask:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RunTask); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Task.Kind has unexpected type %T", x)
	}
	return nil
}

func _Task_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Task)
	switch tag {
	case 14: // kind.mix_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MixTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_MixTask{msg}
		return true, err
	case 15: // kind.plate_prep_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlatePrepTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_PlatePrepTask{msg}
		return true, err
	case 16: // kind.order_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrderTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_OrderTask{msg}
		return true, err
	case 17: // kind.deck_layout_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeckLayoutTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_DeckLayoutTask{msg}
		return true, err
	case 18: // kind.prompt_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PromptTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_PromptTask{msg}
		return true, err
	case 19: // kind.setup_incubator_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetupIncubatorTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_SetupIncubatorTask{msg}
		return true, err
	case 20: // kind.await_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AwaitTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_AwaitTask{msg}
		return true, err
	case 21: // kind.run_task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RunTask)
		err := b.DecodeMessage(msg)
		m.Kind = &Task_RunTask{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Task_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Task)
	// kind
	switch x := m.Kind.(type) {
	case *Task_MixTask:
		s := proto.Size(x.MixTask)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_PlatePrepTask:
		s := proto.Size(x.PlatePrepTask)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_OrderTask:
		s := proto.Size(x.OrderTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_DeckLayoutTask:
		s := proto.Size(x.DeckLayoutTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_PromptTask:
		s := proto.Size(x.PromptTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_SetupIncubatorTask:
		s := proto.Size(x.SetupIncubatorTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_AwaitTask:
		s := proto.Size(x.AwaitTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_RunTask:
		s := proto.Size(x.RunTask)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// How many tips of a particular type were used
type TipInfo struct {
	// the full name of the tip
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// the number of boxes of this tip type used or started
	Boxes uint32 `protobuf:"varint,2,opt,name=boxes" json:"boxes,omitempty"`
	// the number of tips of this type used
	Tips                 uint32   `protobuf:"varint,3,opt,name=tips" json:"tips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TipInfo) Reset()         { *m = TipInfo{} }
func (m *TipInfo) String() string { return proto.CompactTextString(m) }
func (*TipInfo) ProtoMessage()    {}
func (*TipInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{12}
}
func (m *TipInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TipInfo.Unmarshal(m, b)
}
func (m *TipInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TipInfo.Marshal(b, m, deterministic)
}
func (dst *TipInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TipInfo.Merge(dst, src)
}
func (m *TipInfo) XXX_Size() int {
	return xxx_messageInfo_TipInfo.Size(m)
}
func (m *TipInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TipInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TipInfo proto.InternalMessageInfo

func (m *TipInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TipInfo) GetBoxes() uint32 {
	if m != nil {
		return m.Boxes
	}
	return 0
}

func (m *TipInfo) GetTips() uint32 {
	if m != nil {
		return m.Tips
	}
	return 0
}

type MixTask struct {
	// Raw generated instructions (JSON-encoded).
	RawInstructions      []byte   `protobuf:"bytes,1,opt,name=raw_instructions,json=rawInstructions,proto3" json:"raw_instructions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MixTask) Reset()         { *m = MixTask{} }
func (m *MixTask) String() string { return proto.CompactTextString(m) }
func (*MixTask) ProtoMessage()    {}
func (*MixTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{13}
}
func (m *MixTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MixTask.Unmarshal(m, b)
}
func (m *MixTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MixTask.Marshal(b, m, deterministic)
}
func (dst *MixTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixTask.Merge(dst, src)
}
func (m *MixTask) XXX_Size() int {
	return xxx_messageInfo_MixTask.Size(m)
}
func (m *MixTask) XXX_DiscardUnknown() {
	xxx_messageInfo_MixTask.DiscardUnknown(m)
}

var xxx_messageInfo_MixTask proto.InternalMessageInfo

func (m *MixTask) GetRawInstructions() []byte {
	if m != nil {
		return m.RawInstructions
	}
	return nil
}

type PlatePrepTask struct {
	// Mix task that this plate prep corresponds to.
	MixTaskIds           []string `protobuf:"bytes,1,rep,name=mix_task_ids,json=mixTaskIds" json:"mix_task_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlatePrepTask) Reset()         { *m = PlatePrepTask{} }
func (m *PlatePrepTask) String() string { return proto.CompactTextString(m) }
func (*PlatePrepTask) ProtoMessage()    {}
func (*PlatePrepTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{14}
}
func (m *PlatePrepTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlatePrepTask.Unmarshal(m, b)
}
func (m *PlatePrepTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlatePrepTask.Marshal(b, m, deterministic)
}
func (dst *PlatePrepTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatePrepTask.Merge(dst, src)
}
func (m *PlatePrepTask) XXX_Size() int {
	return xxx_messageInfo_PlatePrepTask.Size(m)
}
func (m *PlatePrepTask) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatePrepTask.DiscardUnknown(m)
}

var xxx_messageInfo_PlatePrepTask proto.InternalMessageInfo

func (m *PlatePrepTask) GetMixTaskIds() []string {
	if m != nil {
		return m.MixTaskIds
	}
	return nil
}

type OrderTask struct {
	// Task ids that this order task corresponds to.
	ForTaskIds           []string `protobuf:"bytes,1,rep,name=for_task_ids,json=forTaskIds" json:"for_task_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderTask) Reset()         { *m = OrderTask{} }
func (m *OrderTask) String() string { return proto.CompactTextString(m) }
func (*OrderTask) ProtoMessage()    {}
func (*OrderTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{15}
}
func (m *OrderTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderTask.Unmarshal(m, b)
}
func (m *OrderTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderTask.Marshal(b, m, deterministic)
}
func (dst *OrderTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderTask.Merge(dst, src)
}
func (m *OrderTask) XXX_Size() int {
	return xxx_messageInfo_OrderTask.Size(m)
}
func (m *OrderTask) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderTask.DiscardUnknown(m)
}

var xxx_messageInfo_OrderTask proto.InternalMessageInfo

func (m *OrderTask) GetForTaskIds() []string {
	if m != nil {
		return m.ForTaskIds
	}
	return nil
}

type DeckLayoutTask struct {
	MixTaskIds           []string `protobuf:"bytes,1,rep,name=mix_task_ids,json=mixTaskIds" json:"mix_task_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeckLayoutTask) Reset()         { *m = DeckLayoutTask{} }
func (m *DeckLayoutTask) String() string { return proto.CompactTextString(m) }
func (*DeckLayoutTask) ProtoMessage()    {}
func (*DeckLayoutTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{16}
}
func (m *DeckLayoutTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeckLayoutTask.Unmarshal(m, b)
}
func (m *DeckLayoutTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeckLayoutTask.Marshal(b, m, deterministic)
}
func (dst *DeckLayoutTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeckLayoutTask.Merge(dst, src)
}
func (m *DeckLayoutTask) XXX_Size() int {
	return xxx_messageInfo_DeckLayoutTask.Size(m)
}
func (m *DeckLayoutTask) XXX_DiscardUnknown() {
	xxx_messageInfo_DeckLayoutTask.DiscardUnknown(m)
}

var xxx_messageInfo_DeckLayoutTask proto.InternalMessageInfo

func (m *DeckLayoutTask) GetMixTaskIds() []string {
	if m != nil {
		return m.MixTaskIds
	}
	return nil
}

type PromptTask struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromptTask) Reset()         { *m = PromptTask{} }
func (m *PromptTask) String() string { return proto.CompactTextString(m) }
func (*PromptTask) ProtoMessage()    {}
func (*PromptTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{17}
}
func (m *PromptTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromptTask.Unmarshal(m, b)
}
func (m *PromptTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromptTask.Marshal(b, m, deterministic)
}
func (dst *PromptTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromptTask.Merge(dst, src)
}
func (m *PromptTask) XXX_Size() int {
	return xxx_messageInfo_PromptTask.Size(m)
}
func (m *PromptTask) XXX_DiscardUnknown() {
	xxx_messageInfo_PromptTask.DiscardUnknown(m)
}

var xxx_messageInfo_PromptTask proto.InternalMessageInfo

func (m *PromptTask) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SetupIncubatorTask struct {
	MixTaskIds           []string `protobuf:"bytes,1,rep,name=mix_task_ids,json=mixTaskIds" json:"mix_task_ids,omitempty"`
	PlateIds             []string `protobuf:"bytes,2,rep,name=plate_ids,json=plateIds" json:"plate_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupIncubatorTask) Reset()         { *m = SetupIncubatorTask{} }
func (m *SetupIncubatorTask) String() string { return proto.CompactTextString(m) }
func (*SetupIncubatorTask) ProtoMessage()    {}
func (*SetupIncubatorTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{18}
}
func (m *SetupIncubatorTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupIncubatorTask.Unmarshal(m, b)
}
func (m *SetupIncubatorTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupIncubatorTask.Marshal(b, m, deterministic)
}
func (dst *SetupIncubatorTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupIncubatorTask.Merge(dst, src)
}
func (m *SetupIncubatorTask) XXX_Size() int {
	return xxx_messageInfo_SetupIncubatorTask.Size(m)
}
func (m *SetupIncubatorTask) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupIncubatorTask.DiscardUnknown(m)
}

var xxx_messageInfo_SetupIncubatorTask proto.InternalMessageInfo

func (m *SetupIncubatorTask) GetMixTaskIds() []string {
	if m != nil {
		return m.MixTaskIds
	}
	return nil
}

func (m *SetupIncubatorTask) GetPlateIds() []string {
	if m != nil {
		return m.PlateIds
	}
	return nil
}

type AwaitTask struct {
	DeviceTags           []string   `protobuf:"bytes,1,rep,name=device_tags,json=deviceTags" json:"device_tags,omitempty"`
	CurrentOutputs       []*Param   `protobuf:"bytes,2,rep,name=current_outputs,json=currentOutputs" json:"current_outputs,omitempty"`
	NextInputs           []*Param   `protobuf:"bytes,3,rep,name=next_inputs,json=nextInputs" json:"next_inputs,omitempty"`
	Promises             []*Promise `protobuf:"bytes,4,rep,name=promises" json:"promises,omitempty"`
	NextComponent        string     `protobuf:"bytes,5,opt,name=next_component,json=nextComponent" json:"next_component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AwaitTask) Reset()         { *m = AwaitTask{} }
func (m *AwaitTask) String() string { return proto.CompactTextString(m) }
func (*AwaitTask) ProtoMessage()    {}
func (*AwaitTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{19}
}
func (m *AwaitTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwaitTask.Unmarshal(m, b)
}
func (m *AwaitTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwaitTask.Marshal(b, m, deterministic)
}
func (dst *AwaitTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwaitTask.Merge(dst, src)
}
func (m *AwaitTask) XXX_Size() int {
	return xxx_messageInfo_AwaitTask.Size(m)
}
func (m *AwaitTask) XXX_DiscardUnknown() {
	xxx_messageInfo_AwaitTask.DiscardUnknown(m)
}

var xxx_messageInfo_AwaitTask proto.InternalMessageInfo

func (m *AwaitTask) GetDeviceTags() []string {
	if m != nil {
		return m.DeviceTags
	}
	return nil
}

func (m *AwaitTask) GetCurrentOutputs() []*Param {
	if m != nil {
		return m.CurrentOutputs
	}
	return nil
}

func (m *AwaitTask) GetNextInputs() []*Param {
	if m != nil {
		return m.NextInputs
	}
	return nil
}

func (m *AwaitTask) GetPromises() []*Promise {
	if m != nil {
		return m.Promises
	}
	return nil
}

func (m *AwaitTask) GetNextComponent() string {
	if m != nil {
		return m.NextComponent
	}
	return ""
}

type RunTask struct {
	Command              string   `protobuf:"bytes,1,opt,name=Command" json:"Command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTask) Reset()         { *m = RunTask{} }
func (m *RunTask) String() string { return proto.CompactTextString(m) }
func (*RunTask) ProtoMessage()    {}
func (*RunTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{20}
}
func (m *RunTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTask.Unmarshal(m, b)
}
func (m *RunTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTask.Marshal(b, m, deterministic)
}
func (dst *RunTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTask.Merge(dst, src)
}
func (m *RunTask) XXX_Size() int {
	return xxx_messageInfo_RunTask.Size(m)
}
func (m *RunTask) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTask.DiscardUnknown(m)
}

var xxx_messageInfo_RunTask proto.InternalMessageInfo

func (m *RunTask) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type Promise struct {
	AwaitId              string   `protobuf:"bytes,1,opt,name=await_id,json=awaitId" json:"await_id,omitempty"`
	Value                *Param   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Promise) Reset()         { *m = Promise{} }
func (m *Promise) String() string { return proto.CompactTextString(m) }
func (*Promise) ProtoMessage()    {}
func (*Promise) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{21}
}
func (m *Promise) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Promise.Unmarshal(m, b)
}
func (m *Promise) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Promise.Marshal(b, m, deterministic)
}
func (dst *Promise) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Promise.Merge(dst, src)
}
func (m *Promise) XXX_Size() int {
	return xxx_messageInfo_Promise.Size(m)
}
func (m *Promise) XXX_DiscardUnknown() {
	xxx_messageInfo_Promise.DiscardUnknown(m)
}

var xxx_messageInfo_Promise proto.InternalMessageInfo

func (m *Promise) GetAwaitId() string {
	if m != nil {
		return m.AwaitId
	}
	return ""
}

func (m *Promise) GetValue() *Param {
	if m != nil {
		return m.Value
	}
	return nil
}

type ItemMapping struct {
	InitialId            string   `protobuf:"bytes,1,opt,name=initial_id,json=initialId" json:"initial_id,omitempty"`
	FinalId              string   `protobuf:"bytes,2,opt,name=final_id,json=finalId" json:"final_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemMapping) Reset()         { *m = ItemMapping{} }
func (m *ItemMapping) String() string { return proto.CompactTextString(m) }
func (*ItemMapping) ProtoMessage()    {}
func (*ItemMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{22}
}
func (m *ItemMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemMapping.Unmarshal(m, b)
}
func (m *ItemMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemMapping.Marshal(b, m, deterministic)
}
func (dst *ItemMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemMapping.Merge(dst, src)
}
func (m *ItemMapping) XXX_Size() int {
	return xxx_messageInfo_ItemMapping.Size(m)
}
func (m *ItemMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemMapping.DiscardUnknown(m)
}

var xxx_messageInfo_ItemMapping proto.InternalMessageInfo

func (m *ItemMapping) GetInitialId() string {
	if m != nil {
		return m.InitialId
	}
	return ""
}

func (m *ItemMapping) GetFinalId() string {
	if m != nil {
		return m.FinalId
	}
	return ""
}

// A physical item.
type Item struct {
	Lid   string `protobuf:"bytes,1,opt,name=lid" json:"lid,omitempty"`
	Coord *Coord `protobuf:"bytes,2,opt,name=coord" json:"coord,omitempty"`
	// Types that are valid to be assigned to Inventory:
	//	*Item_Component
	//	*Item_Plate
	//	*Item_Tipbox
	//	*Item_Tipwaste
	Inventory            isItem_Inventory `protobuf_oneof:"inventory"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{23}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

type isItem_Inventory interface {
	isItem_Inventory()
}

type Item_Component struct {
	Component *protobuf1.Component `protobuf:"bytes,4,opt,name=component,oneof"`
}
type Item_Plate struct {
	Plate *protobuf1.Plate `protobuf:"bytes,5,opt,name=plate,oneof"`
}
type Item_Tipbox struct {
	Tipbox *protobuf1.Tipbox `protobuf:"bytes,6,opt,name=tipbox,oneof"`
}
type Item_Tipwaste struct {
	Tipwaste *protobuf1.Tipwaste `protobuf:"bytes,7,opt,name=tipwaste,oneof"`
}

func (*Item_Component) isItem_Inventory() {}
func (*Item_Plate) isItem_Inventory()     {}
func (*Item_Tipbox) isItem_Inventory()    {}
func (*Item_Tipwaste) isItem_Inventory()  {}

func (m *Item) GetInventory() isItem_Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

func (m *Item) GetLid() string {
	if m != nil {
		return m.Lid
	}
	return ""
}

func (m *Item) GetCoord() *Coord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Item) GetComponent() *protobuf1.Component {
	if x, ok := m.GetInventory().(*Item_Component); ok {
		return x.Component
	}
	return nil
}

func (m *Item) GetPlate() *protobuf1.Plate {
	if x, ok := m.GetInventory().(*Item_Plate); ok {
		return x.Plate
	}
	return nil
}

func (m *Item) GetTipbox() *protobuf1.Tipbox {
	if x, ok := m.GetInventory().(*Item_Tipbox); ok {
		return x.Tipbox
	}
	return nil
}

func (m *Item) GetTipwaste() *protobuf1.Tipwaste {
	if x, ok := m.GetInventory().(*Item_Tipwaste); ok {
		return x.Tipwaste
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Item) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Item_OneofMarshaler, _Item_OneofUnmarshaler, _Item_OneofSizer, []interface{}{
		(*Item_Component)(nil),
		(*Item_Plate)(nil),
		(*Item_Tipbox)(nil),
		(*Item_Tipwaste)(nil),
	}
}

func _Item_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Item)
	// inventory
	switch x := m.Inventory.(type) {
	case *Item_Component:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Component); err != nil {
			return err
		}
	case *Item_Plate:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Plate); err != nil {
			return err
		}
	case *Item_Tipbox:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tipbox); err != nil {
			return err
		}
	case *Item_Tipwaste:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tipwaste); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Item.Inventory has unexpected type %T", x)
	}
	return nil
}

func _Item_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Item)
	switch tag {
	case 4: // inventory.component
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(protobuf1.Component)
		err := b.DecodeMessage(msg)
		m.Inventory = &Item_Component{msg}
		return true, err
	case 5: // inventory.plate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(protobuf1.Plate)
		err := b.DecodeMessage(msg)
		m.Inventory = &Item_Plate{msg}
		return true, err
	case 6: // inventory.tipbox
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(protobuf1.Tipbox)
		err := b.DecodeMessage(msg)
		m.Inventory = &Item_Tipbox{msg}
		return true, err
	case 7: // inventory.tipwaste
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(protobuf1.Tipwaste)
		err := b.DecodeMessage(msg)
		m.Inventory = &Item_Tipwaste{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Item_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Item)
	// inventory
	switch x := m.Inventory.(type) {
	case *Item_Component:
		s := proto.Size(x.Component)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Item_Plate:
		s := proto.Size(x.Plate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Item_Tipbox:
		s := proto.Size(x.Tipbox)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Item_Tipwaste:
		s := proto.Size(x.Tipwaste)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Physical normalized component coordinate. Origin (0, 0, 0) is
// lower-left-front (i.e., right-handed).
type Coord struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	X                    float64  `protobuf:"fixed64,3,opt,name=x" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,4,opt,name=y" json:"y,omitempty"`
	Z                    float64  `protobuf:"fixed64,5,opt,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coord) Reset()         { *m = Coord{} }
func (m *Coord) String() string { return proto.CompactTextString(m) }
func (*Coord) ProtoMessage()    {}
func (*Coord) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{24}
}
func (m *Coord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coord.Unmarshal(m, b)
}
func (m *Coord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coord.Marshal(b, m, deterministic)
}
func (dst *Coord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coord.Merge(dst, src)
}
func (m *Coord) XXX_Size() int {
	return xxx_messageInfo_Coord.Size(m)
}
func (m *Coord) XXX_DiscardUnknown() {
	xxx_messageInfo_Coord.DiscardUnknown(m)
}

var xxx_messageInfo_Coord proto.InternalMessageInfo

func (m *Coord) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Coord) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Coord) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Coord) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Coord) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

// An edge between processes.
type Connection struct {
	Source               *Endpoint `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Target               *Endpoint `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{25}
}
func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (dst *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(dst, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetSource() *Endpoint {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Connection) GetTarget() *Endpoint {
	if m != nil {
		return m.Target
	}
	return nil
}

// An input or output of a process in a workflow.
type Endpoint struct {
	// Process id.
	Process string `protobuf:"bytes,1,opt,name=process" json:"process,omitempty"`
	// Parameter name.
	Port                 string   `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{26}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetProcess() string {
	if m != nil {
		return m.Process
	}
	return ""
}

func (m *Endpoint) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

// A process in a workflow.
type Process struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Antha component for this process.
	Component string `protobuf:"bytes,2,opt,name=component" json:"component,omitempty"`
	// Digital inputs for this process.
	Parameters []*Param `protobuf:"bytes,3,rep,name=parameters" json:"parameters,omitempty"`
	// Digital outputs for this process.
	Outputs              []*Param       `protobuf:"bytes,4,rep,name=outputs" json:"outputs,omitempty"`
	Stage                ComponentStage `protobuf:"varint,5,opt,name=stage,enum=com.synthace.antha_runner.ComponentStage" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{27}
}
func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (dst *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(dst, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Process) GetComponent() string {
	if m != nil {
		return m.Component
	}
	return ""
}

func (m *Process) GetParameters() []*Param {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Process) GetOutputs() []*Param {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Process) GetStage() ComponentStage {
	if m != nil {
		return m.Stage
	}
	return ComponentStage_STEPS
}

type Param struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Param_Raw
	//	*Param_Reference
	Data                 isParam_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Param) Reset()         { *m = Param{} }
func (m *Param) String() string { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()    {}
func (*Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{28}
}
func (m *Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param.Unmarshal(m, b)
}
func (m *Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param.Marshal(b, m, deterministic)
}
func (dst *Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param.Merge(dst, src)
}
func (m *Param) XXX_Size() int {
	return xxx_messageInfo_Param.Size(m)
}
func (m *Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Param proto.InternalMessageInfo

type isParam_Data interface {
	isParam_Data()
}

type Param_Raw struct {
	Raw []byte `protobuf:"bytes,2,opt,name=raw,proto3,oneof"`
}
type Param_Reference struct {
	Reference string `protobuf:"bytes,3,opt,name=reference,oneof"`
}

func (*Param_Raw) isParam_Data()       {}
func (*Param_Reference) isParam_Data() {}

func (m *Param) GetData() isParam_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Param) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Param) GetRaw() []byte {
	if x, ok := m.GetData().(*Param_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *Param) GetReference() string {
	if x, ok := m.GetData().(*Param_Reference); ok {
		return x.Reference
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Param) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Param_OneofMarshaler, _Param_OneofUnmarshaler, _Param_OneofSizer, []interface{}{
		(*Param_Raw)(nil),
		(*Param_Reference)(nil),
	}
}

func _Param_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Param)
	// data
	switch x := m.Data.(type) {
	case *Param_Raw:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Raw)
	case *Param_Reference:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Reference)
	case nil:
	default:
		return fmt.Errorf("Param.Data has unexpected type %T", x)
	}
	return nil
}

func _Param_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Param)
	switch tag {
	case 2: // data.raw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Param_Raw{x}
		return true, err
	case 3: // data.reference
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Param_Reference{x}
		return true, err
	default:
		return false, nil
	}
}

func _Param_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Param)
	// data
	switch x := m.Data.(type) {
	case *Param_Raw:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Raw)))
		n += len(x.Raw)
	case *Param_Reference:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Reference)))
		n += len(x.Reference)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateReportResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReportResponse) Reset()         { *m = CreateReportResponse{} }
func (m *CreateReportResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReportResponse) ProtoMessage()    {}
func (*CreateReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_531bdab4fa09d861, []int{29}
}
func (m *CreateReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReportResponse.Unmarshal(m, b)
}
func (m *CreateReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReportResponse.Marshal(b, m, deterministic)
}
func (dst *CreateReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReportResponse.Merge(dst, src)
}
func (m *CreateReportResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReportResponse.Size(m)
}
func (m *CreateReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReportResponse proto.InternalMessageInfo

func (m *CreateReportResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthCheckMessage)(nil), "com.synthace.antha_runner.HealthCheckMessage")
	proto.RegisterType((*Metadata)(nil), "com.synthace.antha_runner.Metadata")
	proto.RegisterType((*Empty)(nil), "com.synthace.antha_runner.Empty")
	proto.RegisterType((*SimulateRequest)(nil), "com.synthace.antha_runner.SimulateRequest")
	proto.RegisterType((*SimulateResponse)(nil), "com.synthace.antha_runner.SimulateResponse")
	proto.RegisterType((*SimulateCommandResponse)(nil), "com.synthace.antha_runner.SimulateCommandResponse")
	proto.RegisterType((*Report)(nil), "com.synthace.antha_runner.Report")
	proto.RegisterType((*Device)(nil), "com.synthace.antha_runner.Device")
	proto.RegisterType((*PlateIds)(nil), "com.synthace.antha_runner.PlateIds")
	proto.RegisterType((*Plates)(nil), "com.synthace.antha_runner.Plates")
	proto.RegisterType((*MixerConfig)(nil), "com.synthace.antha_runner.MixerConfig")
	proto.RegisterType((*Task)(nil), "com.synthace.antha_runner.Task")
	proto.RegisterType((*TipInfo)(nil), "com.synthace.antha_runner.TipInfo")
	proto.RegisterType((*MixTask)(nil), "com.synthace.antha_runner.MixTask")
	proto.RegisterType((*PlatePrepTask)(nil), "com.synthace.antha_runner.PlatePrepTask")
	proto.RegisterType((*OrderTask)(nil), "com.synthace.antha_runner.OrderTask")
	proto.RegisterType((*DeckLayoutTask)(nil), "com.synthace.antha_runner.DeckLayoutTask")
	proto.RegisterType((*PromptTask)(nil), "com.synthace.antha_runner.PromptTask")
	proto.RegisterType((*SetupIncubatorTask)(nil), "com.synthace.antha_runner.SetupIncubatorTask")
	proto.RegisterType((*AwaitTask)(nil), "com.synthace.antha_runner.AwaitTask")
	proto.RegisterType((*RunTask)(nil), "com.synthace.antha_runner.RunTask")
	proto.RegisterType((*Promise)(nil), "com.synthace.antha_runner.Promise")
	proto.RegisterType((*ItemMapping)(nil), "com.synthace.antha_runner.ItemMapping")
	proto.RegisterType((*Item)(nil), "com.synthace.antha_runner.Item")
	proto.RegisterType((*Coord)(nil), "com.synthace.antha_runner.Coord")
	proto.RegisterType((*Connection)(nil), "com.synthace.antha_runner.Connection")
	proto.RegisterType((*Endpoint)(nil), "com.synthace.antha_runner.Endpoint")
	proto.RegisterType((*Process)(nil), "com.synthace.antha_runner.Process")
	proto.RegisterType((*Param)(nil), "com.synthace.antha_runner.Param")
	proto.RegisterType((*CreateReportResponse)(nil), "com.synthace.antha_runner.CreateReportResponse")
	proto.RegisterEnum("com.synthace.antha_runner.DeviceClass", DeviceClass_name, DeviceClass_value)
	proto.RegisterEnum("com.synthace.antha_runner.ComponentStage", ComponentStage_name, ComponentStage_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Service service

type ServiceClient interface {
	// Simulate a workflow.
	Simulate(ctx context.Context, in *SimulateRequest, opts ...grpc.CallOption) (Service_SimulateClient, error)
	HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HealthCheckMessage, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Simulate(ctx context.Context, in *SimulateRequest, opts ...grpc.CallOption) (Service_SimulateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Service_serviceDesc.Streams[0], c.cc, "/com.synthace.antha_runner.Service/Simulate", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceSimulateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Service_SimulateClient interface {
	Recv() (*SimulateResponse, error)
	grpc.ClientStream
}

type serviceSimulateClient struct {
	grpc.ClientStream
}

func (x *serviceSimulateClient) Recv() (*SimulateResponse, error) {
	m := new(SimulateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serviceClient) HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HealthCheckMessage, error) {
	out := new(HealthCheckMessage)
	err := grpc.Invoke(ctx, "/com.synthace.antha_runner.Service/HealthCheck", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Service service

type ServiceServer interface {
	// Simulate a workflow.
	Simulate(*SimulateRequest, Service_SimulateServer) error
	HealthCheck(context.Context, *Empty) (*HealthCheckMessage, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Simulate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SimulateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceServer).Simulate(m, &serviceSimulateServer{stream})
}

type Service_SimulateServer interface {
	Send(*SimulateResponse) error
	grpc.ServerStream
}

type serviceSimulateServer struct {
	grpc.ServerStream
}

func (x *serviceSimulateServer) Send(m *SimulateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Service_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.synthace.antha_runner.Service/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).HealthCheck(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.synthace.antha_runner.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _Service_HealthCheck_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Simulate",
			Handler:       _Service_Simulate_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/protobuf.proto",
}

// Reference imports to suppress errors if they are not otherwise used.
var _ roles.RbacRule
var _ types.Type

const (
	Service_Simulate    = "/com.synthace.antha_runner.Service/Simulate"
	Service_HealthCheck = "/com.synthace.antha_runner.Service/HealthCheck"
)

var RbacRules = map[string]*roles.RbacRule{}

func init() { proto.RegisterFile("protobuf/protobuf.proto", fileDescriptor_protobuf_531bdab4fa09d861) }

var fileDescriptor_protobuf_531bdab4fa09d861 = []byte{
	// 2503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xdb, 0x72, 0x1b, 0xc7,
	0xd1, 0xe6, 0xf2, 0x80, 0x43, 0x83, 0x20, 0x56, 0x23, 0x8a, 0x82, 0xe8, 0x83, 0xe8, 0xb5, 0xe5,
	0x9f, 0x96, 0x6d, 0xca, 0xbf, 0x62, 0xa6, 0x9c, 0x38, 0x15, 0x19, 0x04, 0xd7, 0x02, 0x64, 0x92,
	0xa0, 0x07, 0x90, 0x64, 0xa5, 0x52, 0xd9, 0x1a, 0xee, 0x0e, 0xc9, 0x09, 0xf7, 0xe4, 0x9d, 0x01,
	0x09, 0xfa, 0x01, 0xf2, 0x10, 0xb9, 0xcb, 0x55, 0x9e, 0x24, 0x37, 0xbe, 0x4a, 0x5e, 0x21, 0x0f,
	0x91, 0xeb, 0xd4, 0x1c, 0x16, 0x07, 0x8a, 0x04, 0x98, 0xaa, 0x5c, 0xe4, 0x0a, 0xdb, 0x3d, 0x5f,
	0x7f, 0x3b, 0xdb, 0xd3, 0xd3, 0xdd, 0x33, 0x80, 0xfb, 0x69, 0x96, 0x88, 0xe4, 0xa8, 0x7f, 0xfc,
	0x24, 0x7f, 0xd8, 0x52, 0x0f, 0xe8, 0x81, 0x9f, 0x44, 0x5b, 0xfc, 0x32, 0x16, 0xa7, 0xc4, 0xa7,
	0x5b, 0x44, 0xfe, 0x7a, 0x59, 0x3f, 0x8e, 0x69, 0xb6, 0xfe, 0xed, 0x09, 0x13, 0xa7, 0xfd, 0xa3,
	0x2d, 0x3f, 0x89, 0x9e, 0x74, 0x0d, 0xe2, 0x49, 0xc4, 0xfc, 0x2c, 0xe1, 0x34, 0x3b, 0x67, 0x3e,
	0x7d, 0xe2, 0x47, 0xc1, 0x13, 0x16, 0x9f, 0xd3, 0x58, 0x24, 0xd9, 0xe5, 0x93, 0x1b, 0x5e, 0xb1,
	0xbe, 0x7b, 0x2b, 0x1e, 0x1a, 0xd2, 0x88, 0xc6, 0xe2, 0x26, 0x16, 0xe7, 0x33, 0x40, 0x2d, 0x4a,
	0x42, 0x71, 0xda, 0x3c, 0xa5, 0xfe, 0xd9, 0x3e, 0xe5, 0x9c, 0x9c, 0x50, 0xb4, 0x06, 0x05, 0x2e,
	0x88, 0xe8, 0xf3, 0xba, 0xb5, 0x61, 0x6d, 0x96, 0xb1, 0x91, 0x1c, 0x17, 0x4a, 0xfb, 0x54, 0x90,
	0x80, 0x08, 0x82, 0x7e, 0x05, 0x25, 0x43, 0x2e, 0x51, 0x0b, 0x9b, 0x95, 0xa7, 0xef, 0x6d, 0x4d,
	0x7c, 0xb5, 0x19, 0xdd, 0x72, 0xf5, 0x2f, 0x1e, 0xc2, 0x9d, 0x22, 0x2c, 0xb9, 0x51, 0x2a, 0x2e,
	0x9d, 0x3f, 0x2f, 0x40, 0xad, 0xcb, 0xa2, 0x7e, 0x48, 0x04, 0xc5, 0xf4, 0xc7, 0x3e, 0xe5, 0x02,
	0x3d, 0x83, 0x32, 0x39, 0x27, 0x2c, 0x24, 0x47, 0x21, 0x35, 0xc4, 0x1f, 0x6c, 0xdd, 0xe8, 0xce,
	0xad, 0x5d, 0x2a, 0xbf, 0x15, 0x8f, 0x6c, 0xd0, 0x37, 0x50, 0x4e, 0xb3, 0xc4, 0xa7, 0x9c, 0x53,
	0x5e, 0x9f, 0x57, 0x04, 0xce, 0x14, 0x82, 0x43, 0x8d, 0xc5, 0x23, 0x23, 0xf4, 0x1c, 0x2a, 0x7e,
	0x12, 0xc7, 0xd4, 0x17, 0x2c, 0x89, 0x79, 0x7d, 0x41, 0x71, 0x3c, 0x9a, 0xc2, 0xd1, 0x1c, 0xa2,
	0xf1, 0xb8, 0x25, 0x6a, 0xc3, 0x72, 0xc4, 0x06, 0x34, 0xf3, 0xfc, 0x24, 0x3e, 0x66, 0x27, 0xf5,
	0xc5, 0x0d, 0x6b, 0xb3, 0xf2, 0xf4, 0xe3, 0x29, 0x4c, 0xfb, 0x12, 0xde, 0x54, 0x68, 0x5c, 0x89,
	0x46, 0x02, 0xfa, 0x0c, 0x50, 0x9a, 0x51, 0x21, 0x2e, 0xbd, 0x63, 0x16, 0x52, 0x2f, 0xcd, 0xe8,
	0x31, 0x1b, 0xd4, 0x97, 0xd4, 0xf2, 0xd8, 0x7a, 0xe4, 0x5b, 0x16, 0xd2, 0x43, 0xa5, 0x47, 0x3b,
	0x50, 0x49, 0xa5, 0x53, 0x3d, 0x71, 0x99, 0x52, 0x5e, 0x2f, 0x5c, 0xe7, 0xc6, 0x61, 0x88, 0x6d,
	0x1d, 0x4a, 0x68, 0xef, 0x32, 0xa5, 0x18, 0xd2, 0xfc, 0x91, 0x3b, 0x7f, 0xb5, 0xc0, 0x1e, 0x2d,
	0x0e, 0x4f, 0x93, 0x98, 0x53, 0xf4, 0x35, 0x14, 0x32, 0x9a, 0x26, 0x99, 0x50, 0x91, 0x31, 0x7d,
	0x69, 0xb0, 0x02, 0xb6, 0xe6, 0xb0, 0x31, 0x41, 0x75, 0x19, 0x56, 0x41, 0xd2, 0x17, 0xf5, 0xf9,
	0x0d, 0x6b, 0x73, 0x59, 0x8e, 0x68, 0xd9, 0x8c, 0xd0, 0x2c, 0xab, 0x2f, 0x8c, 0x8d, 0xd0, 0x2c,
	0x43, 0x6b, 0xb0, 0x44, 0xb3, 0x2c, 0xc9, 0x94, 0xef, 0xca, 0xad, 0x39, 0xac, 0xc5, 0x1d, 0x80,
	0x52, 0x66, 0x26, 0xe5, 0xfc, 0x04, 0xf7, 0xf3, 0x89, 0x36, 0x93, 0x28, 0x22, 0x71, 0xf0, 0xdf,
	0x99, 0xef, 0xf0, 0xdd, 0xf3, 0x37, 0xbf, 0xfb, 0x67, 0x0b, 0x0a, 0xda, 0x10, 0x6d, 0xc3, 0x92,
	0x20, 0xfc, 0x2c, 0xdf, 0x0e, 0x0f, 0xa7, 0xbc, 0xaa, 0x47, 0xf8, 0x19, 0xd6, 0xe8, 0xff, 0xa1,
	0x78, 0x75, 0xb6, 0xa0, 0xa0, 0xf7, 0x13, 0x5a, 0x81, 0x79, 0x16, 0x98, 0xdd, 0x3f, 0xcf, 0x02,
	0xb4, 0x0a, 0x4b, 0x7e, 0x48, 0x38, 0xd7, 0xae, 0xc0, 0x5a, 0x70, 0xfe, 0x0f, 0x4a, 0x2a, 0x76,
	0xda, 0x01, 0x47, 0xef, 0x40, 0x59, 0x87, 0x1c, 0x0b, 0xb4, 0x07, 0xca, 0xb8, 0x94, 0x9a, 0x41,
	0xe7, 0x19, 0x14, 0x14, 0x90, 0xa3, 0x6d, 0x28, 0x28, 0xed, 0x0d, 0x49, 0xe3, 0x4a, 0x50, 0x62,
	0x03, 0x76, 0xfe, 0x09, 0x50, 0x19, 0xdb, 0x1b, 0x68, 0x1f, 0x6c, 0x16, 0xa7, 0x7d, 0xe1, 0xe9,
	0x77, 0x9e, 0x93, 0x90, 0xd7, 0xef, 0xcd, 0x5c, 0x61, 0x3d, 0x87, 0xd6, 0x1c, 0x5e, 0x51, 0xc6,
	0x4a, 0x7c, 0x45, 0x42, 0x8e, 0xf6, 0xa1, 0x36, 0x4e, 0x27, 0x3f, 0x61, 0x4d, 0xb1, 0x7d, 0x38,
	0x8b, 0xad, 0x1d, 0x48, 0xbe, 0xea, 0x88, 0x4f, 0xfa, 0xa2, 0x03, 0x77, 0x92, 0xbe, 0xb8, 0x32,
	0xbd, 0xfb, 0xb7, 0x9d, 0x9e, 0x85, 0x6b, 0xda, 0x7a, 0x34, 0xbf, 0x0e, 0xd8, 0x13, 0x84, 0x72,
	0x82, 0xf5, 0xdb, 0x4f, 0xd0, 0xc2, 0x2b, 0x63, 0x8c, 0x72, 0x86, 0x8f, 0xe1, 0xce, 0xf8, 0x07,
	0xeb, 0x34, 0xb1, 0xa0, 0x56, 0xad, 0x36, 0xfa, 0x16, 0x95, 0x08, 0x64, 0xea, 0x99, 0x78, 0xb9,
	0x06, 0x2f, 0x2a, 0xb0, 0x3d, 0xc6, 0xab, 0xd1, 0xef, 0x40, 0x59, 0xb0, 0xd4, 0x80, 0x96, 0x74,
	0x1c, 0x08, 0x96, 0xea, 0xc1, 0xf7, 0x00, 0x22, 0x32, 0xf0, 0x4c, 0x04, 0x14, 0x36, 0xac, 0x4d,
	0x0b, 0x97, 0x23, 0x32, 0x30, 0xc1, 0xf1, 0x0e, 0x48, 0xc1, 0xbb, 0xa0, 0x61, 0xc8, 0xeb, 0x45,
	0x35, 0x5a, 0x8a, 0xc8, 0xe0, 0xb5, 0x94, 0xd1, 0x97, 0xb0, 0x96, 0x51, 0xce, 0x82, 0x3e, 0x09,
	0xbd, 0xf3, 0x24, 0xec, 0x47, 0xd4, 0xbb, 0xa0, 0xec, 0xe4, 0x54, 0xd4, 0x4b, 0x0a, 0xb9, 0x9a,
	0x8f, 0xbe, 0x52, 0x83, 0xaf, 0xd5, 0x18, 0xfa, 0x14, 0xee, 0x44, 0x49, 0x40, 0x43, 0x8f, 0x9e,
	0x93, 0x34, 0xc9, 0x88, 0x0c, 0xf4, 0x3a, 0x6c, 0x58, 0x9b, 0x25, 0x6c, 0xab, 0x01, 0x77, 0xa4,
	0x47, 0x0f, 0xa1, 0x62, 0xbe, 0x94, 0xcb, 0x94, 0x51, 0x51, 0x30, 0xd0, 0xaa, 0xae, 0xdc, 0xe2,
	0x6d, 0xf8, 0x20, 0xc8, 0xd8, 0x39, 0xcd, 0x3c, 0x9e, 0x52, 0x9f, 0x1d, 0x33, 0xdf, 0x33, 0x6e,
	0xcc, 0xe8, 0x31, 0xcd, 0x68, 0xec, 0x53, 0x5e, 0x5f, 0x56, 0x1f, 0xfd, 0xbe, 0x06, 0x76, 0x0d,
	0xae, 0xad, 0x9c, 0x3a, 0x42, 0xa1, 0xef, 0xc0, 0xb9, 0x4a, 0x95, 0x7b, 0x79, 0x8c, 0xab, 0xaa,
	0xb8, 0x1e, 0x4e, 0x72, 0x75, 0xb4, 0xcf, 0xc7, 0xc8, 0x5c, 0x78, 0x78, 0x95, 0x4c, 0x2e, 0xc2,
	0x38, 0xd3, 0x8a, 0x62, 0x7a, 0x77, 0x92, 0xa9, 0xc7, 0xd2, 0x71, 0x9a, 0x43, 0x78, 0x74, 0x1d,
	0xcd, 0x05, 0xe1, 0x82, 0x4e, 0x90, 0xd5, 0x14, 0xd9, 0x07, 0x6f, 0x91, 0xbd, 0x96, 0xc8, 0x71,
	0xc6, 0xe7, 0xb0, 0x71, 0x95, 0xf1, 0x82, 0xf0, 0xd3, 0x09, 0x32, 0x5b, 0x91, 0xbd, 0x37, 0x49,
	0xf6, 0x9a, 0xf0, 0xd3, 0x71, 0xa2, 0x4f, 0xc0, 0x4e, 0x43, 0x12, 0xc7, 0x2c, 0x3e, 0xf1, 0xce,
	0x69, 0xc6, 0xe5, 0x32, 0xde, 0x51, 0xb9, 0xa8, 0x96, 0xeb, 0x5f, 0x69, 0x35, 0xda, 0x86, 0xfb,
	0x7d, 0x4e, 0x3d, 0xf3, 0x5e, 0x15, 0x8c, 0x19, 0xf1, 0xcf, 0x58, 0x7c, 0x52, 0x47, 0x6a, 0x45,
	0x57, 0xfb, 0x9c, 0xee, 0xaa, 0xd1, 0x1e, 0x4b, 0x7b, 0x66, 0x4c, 0xc6, 0x66, 0xa0, 0x92, 0x9f,
	0xda, 0x5d, 0xab, 0x6a, 0x52, 0x65, 0xad, 0x91, 0x3b, 0x66, 0x1f, 0x3e, 0x0a, 0xd9, 0x8f, 0x7d,
	0x16, 0x78, 0xa7, 0x24, 0x0e, 0x42, 0x39, 0x8f, 0x34, 0x09, 0x99, 0x7f, 0xe9, 0x0d, 0x42, 0x3e,
	0xf0, 0xfe, 0x18, 0xa5, 0xaa, 0x32, 0xd7, 0x1f, 0xc8, 0x02, 0x86, 0x1f, 0x6a, 0x6c, 0xcb, 0x40,
	0x0f, 0x15, 0xf2, 0x87, 0x90, 0x0f, 0x5e, 0x44, 0xa9, 0xac, 0xd3, 0xe8, 0x37, 0xb0, 0xce, 0x4e,
	0xe2, 0x24, 0xa3, 0x5e, 0x7a, 0x7a, 0xc9, 0x99, 0x4f, 0x42, 0x8f, 0xeb, 0x1a, 0x26, 0xbf, 0x6c,
	0x5d, 0xcd, 0xb3, 0xae, 0x11, 0x87, 0x06, 0xd0, 0x1d, 0x8e, 0xef, 0xac, 0xc0, 0xf2, 0xd8, 0xf6,
	0xe5, 0x3b, 0x35, 0xa8, 0x8e, 0x6f, 0x51, 0xfe, 0x62, 0xb1, 0x64, 0xd9, 0xf3, 0x2f, 0x16, 0x4b,
	0xf3, 0xf6, 0xc2, 0x8b, 0xc5, 0x52, 0xd9, 0x86, 0x17, 0x8b, 0xa5, 0xbb, 0xf6, 0x2a, 0x9e, 0x30,
	0xc3, 0x93, 0x46, 0xce, 0xcf, 0x65, 0x58, 0x94, 0x95, 0xe9, 0xba, 0xec, 0x1f, 0x92, 0x23, 0x1a,
	0xe6, 0xd9, 0x5f, 0x09, 0xa8, 0x0e, 0xc5, 0x80, 0x0a, 0xc2, 0x42, 0xae, 0xaa, 0x76, 0x19, 0xe7,
	0xa2, 0xdc, 0xc7, 0x43, 0x57, 0xea, 0xc2, 0x8d, 0x4b, 0xb9, 0x27, 0xd1, 0x87, 0x50, 0x15, 0x2c,
	0xa2, 0x1e, 0xe5, 0x82, 0x45, 0x44, 0x50, 0xd5, 0xc4, 0x58, 0x78, 0x59, 0x2a, 0x5d, 0xa3, 0x43,
	0x8f, 0x60, 0xe5, 0x94, 0xa4, 0x29, 0x8d, 0xb9, 0x77, 0x44, 0x8f, 0x93, 0x8c, 0xaa, 0x1e, 0xa6,
	0x8c, 0xab, 0x46, 0xbb, 0xa3, 0x94, 0x68, 0x17, 0xaa, 0x2c, 0x66, 0x82, 0x91, 0xd0, 0x63, 0x82,
	0x46, 0x32, 0x69, 0xcc, 0x2a, 0xbd, 0x6d, 0x41, 0x23, 0xe9, 0x06, 0x65, 0x25, 0x05, 0x59, 0x81,
	0x2b, 0xc7, 0x2c, 0x1e, 0x72, 0x94, 0x6e, 0xc7, 0x01, 0xca, 0x46, 0x33, 0x7c, 0x07, 0x55, 0x69,
	0xeb, 0x45, 0x24, 0x4d, 0x59, 0x7c, 0xc2, 0xeb, 0x65, 0xc5, 0xf1, 0xf1, 0x0c, 0x8e, 0x7d, 0x0d,
	0xc7, 0xcb, 0x6c, 0x24, 0x70, 0xf4, 0x4b, 0x58, 0x92, 0x91, 0xc4, 0xeb, 0xa0, 0x48, 0x36, 0xa6,
	0x65, 0x78, 0x92, 0x91, 0x08, 0x6b, 0xb8, 0xb4, 0xf3, 0x89, 0xcc, 0x9c, 0x95, 0xdb, 0xda, 0x29,
	0xb8, 0x0c, 0x7c, 0xb5, 0x20, 0x7e, 0x92, 0x64, 0x41, 0xbd, 0xaa, 0x93, 0xb2, 0xd4, 0x34, 0xa5,
	0x02, 0x3d, 0x83, 0x52, 0xc4, 0x06, 0x9e, 0x6c, 0x56, 0xea, 0x2b, 0xaa, 0xe6, 0x38, 0xd3, 0x1b,
	0x58, 0x19, 0x42, 0xad, 0x39, 0x5c, 0x8c, 0xf4, 0x23, 0xc2, 0x50, 0xd3, 0x85, 0x23, 0xcd, 0x68,
	0xaa, 0x79, 0x6a, 0x8a, 0x67, 0x73, 0x56, 0xed, 0x3a, 0xcc, 0x68, 0x6a, 0xd8, 0xaa, 0xe9, 0xb8,
	0x02, 0xb9, 0x00, 0x49, 0x16, 0xc8, 0xed, 0x2d, 0xe9, 0x6c, 0x45, 0xf7, 0xd1, 0x14, 0xba, 0x8e,
	0x04, 0x1b, 0xaa, 0x72, 0x92, 0x0b, 0xe8, 0x25, 0xd8, 0x01, 0xf5, 0xcf, 0xbc, 0x90, 0x5c, 0x26,
	0x7d, 0xa1, 0xc9, 0xee, 0x28, 0xb2, 0x4f, 0xa6, 0x9e, 0x39, 0xfc, 0xb3, 0x3d, 0x65, 0x61, 0x18,
	0x57, 0x82, 0x09, 0x0d, 0x6a, 0x41, 0x25, 0xcd, 0x92, 0x28, 0x35, 0x8c, 0x48, 0x31, 0x3e, 0x9a,
	0xde, 0xd4, 0x45, 0x69, 0xce, 0x06, 0xe9, 0x50, 0x42, 0x04, 0x56, 0x39, 0x15, 0xfd, 0xd4, 0x63,
	0xb1, 0xdf, 0x3f, 0x22, 0x22, 0x31, 0x5f, 0x7c, 0x57, 0x51, 0x7e, 0x3e, 0x85, 0xb2, 0x2b, 0xcd,
	0xda, 0xb9, 0x95, 0xa1, 0x46, 0xfc, 0x2d, 0xad, 0x74, 0x25, 0xb9, 0x20, 0xcc, 0xcc, 0x75, 0x75,
	0xa6, 0x2b, 0x1b, 0x12, 0x9c, 0xbb, 0x92, 0xe4, 0x82, 0x0c, 0x93, 0xac, 0x1f, 0x6b, 0x92, 0x7b,
	0x33, 0xc3, 0x04, 0xf7, 0xe3, 0x3c, 0x4c, 0x32, 0xfd, 0x88, 0x5c, 0x58, 0x96, 0xb9, 0x7a, 0x98,
	0x16, 0xd6, 0x66, 0xb6, 0xc2, 0x3d, 0x96, 0xb6, 0xe3, 0xe3, 0x04, 0x57, 0x04, 0x4b, 0xf3, 0xcc,
	0xb1, 0x53, 0x80, 0xc5, 0x33, 0x16, 0x07, 0xce, 0x73, 0x28, 0x9a, 0x71, 0x84, 0x60, 0x31, 0x26,
	0x11, 0x35, 0x09, 0x4d, 0x3d, 0xcb, 0x94, 0x76, 0x94, 0x0c, 0xa8, 0x6e, 0x68, 0xab, 0x58, 0x0b,
	0x12, 0x29, 0x58, 0xaa, 0xf3, 0x59, 0x15, 0xab, 0x67, 0xe7, 0x4b, 0x28, 0x9a, 0xa0, 0x96, 0x45,
	0x28, 0x23, 0x17, 0x1e, 0x8b, 0xb9, 0xc8, 0xfa, 0xa6, 0xdb, 0xb6, 0x54, 0xbe, 0xaf, 0x65, 0xe4,
	0xa2, 0x3d, 0xa6, 0x76, 0xfe, 0x1f, 0xaa, 0x13, 0x21, 0x8c, 0x36, 0xd4, 0x59, 0x50, 0xf9, 0x67,
	0xac, 0x45, 0x06, 0xb3, 0x49, 0x64, 0x93, 0xfc, 0x39, 0x94, 0x87, 0x61, 0x2a, 0xe1, 0xc7, 0x66,
	0xb1, 0xc7, 0xe1, 0xc7, 0x7a, 0xd1, 0x24, 0xfc, 0x29, 0xac, 0x4c, 0x06, 0xe2, 0x2d, 0x5e, 0xb1,
	0x01, 0x30, 0x0a, 0x35, 0xf5, 0xb5, 0x74, 0x20, 0x72, 0xbf, 0xc8, 0x67, 0xa7, 0x0b, 0xe8, 0xed,
	0xc8, 0x99, 0xcd, 0x3c, 0xd9, 0xfe, 0xcf, 0x5f, 0x69, 0xff, 0xff, 0x32, 0x0f, 0xe5, 0x61, 0xd8,
	0xc8, 0x2e, 0xcb, 0x54, 0x07, 0x41, 0x4e, 0x86, 0x5c, 0x5a, 0xd5, 0x23, 0x27, 0xf2, 0xd8, 0x5c,
	0xf3, 0xfb, 0x59, 0x46, 0x63, 0x61, 0x5a, 0xa2, 0xfc, 0x5c, 0x34, 0x3b, 0xa5, 0xad, 0x18, 0x43,
	0xdd, 0x22, 0x71, 0xd4, 0x80, 0x4a, 0x4c, 0x07, 0x42, 0x77, 0x69, 0xf9, 0xd1, 0x68, 0x36, 0x0d,
	0x48, 0x23, 0xd5, 0xb2, 0x71, 0xf4, 0x5b, 0x28, 0xc9, 0x0d, 0xc9, 0xb8, 0x69, 0x7a, 0x67, 0x1e,
	0xcf, 0x24, 0x14, 0x0f, 0x6d, 0x64, 0x29, 0x53, 0x53, 0xf0, 0x93, 0x28, 0x4d, 0x62, 0x1a, 0x0b,
	0x73, 0x6a, 0xaf, 0x4a, 0x6d, 0x33, 0x57, 0x3a, 0x1f, 0x42, 0xd1, 0x6c, 0x0a, 0x59, 0x58, 0xcd,
	0x39, 0xd6, 0x2c, 0x4d, 0x2e, 0x3a, 0xbf, 0x87, 0xa2, 0x79, 0x01, 0x7a, 0x00, 0x25, 0xbd, 0x6d,
	0x87, 0x95, 0xba, 0xa8, 0xe4, 0x76, 0x20, 0x0b, 0xc1, 0x39, 0x09, 0xfb, 0x54, 0xc5, 0xf6, 0xad,
	0x0a, 0x81, 0x82, 0x3b, 0xcf, 0xa1, 0x32, 0x56, 0x95, 0x64, 0x5d, 0x18, 0x16, 0xd7, 0xfc, 0x1d,
	0xe5, 0xbc, 0x70, 0x06, 0x72, 0x02, 0xa6, 0x6a, 0x06, 0xa6, 0x2f, 0x28, 0xea, 0x8a, 0x18, 0x38,
	0xff, 0x98, 0x87, 0x45, 0xc9, 0x84, 0x6c, 0x58, 0x08, 0x87, 0xb6, 0xf2, 0x51, 0x15, 0x29, 0x55,
	0x67, 0x66, 0xcf, 0x4d, 0x95, 0x1f, 0xac, 0xe1, 0xa8, 0x01, 0xe5, 0x91, 0x03, 0x17, 0xaf, 0x3b,
	0x4a, 0x8d, 0x8e, 0x8e, 0x43, 0xa7, 0xca, 0x0c, 0x35, 0xb4, 0x92, 0xe7, 0x73, 0x15, 0x91, 0xca,
	0xff, 0xb3, 0x4e, 0x9e, 0xf2, 0xb4, 0xaf, 0xd0, 0xe8, 0x2b, 0x28, 0x08, 0x96, 0x1e, 0x25, 0x03,
	0x75, 0x5e, 0xa9, 0x3c, 0x7d, 0xff, 0x26, 0xbb, 0x9e, 0x42, 0xb5, 0xe6, 0xb0, 0xc1, 0xcb, 0xc8,
	0x11, 0x2c, 0x55, 0xdd, 0xb3, 0x3a, 0xcd, 0xbc, 0xf5, 0xb9, 0x13, 0xb6, 0x0a, 0xd7, 0x9a, 0xc3,
	0x43, 0x9b, 0x9d, 0x0a, 0x94, 0x87, 0x08, 0xc7, 0x83, 0x25, 0x5d, 0x8f, 0xd7, 0xa0, 0x90, 0x12,
	0x19, 0xe3, 0xf9, 0xe5, 0x9c, 0x96, 0x6e, 0x68, 0xd2, 0x96, 0xc1, 0x1a, 0xa8, 0x74, 0x66, 0x61,
	0x6b, 0x20, 0xa5, 0x4b, 0xe5, 0x3d, 0x0b, 0x5b, 0x97, 0x52, 0xfa, 0xc9, 0x74, 0x5f, 0xd6, 0x4f,
	0xce, 0x9f, 0x2c, 0x80, 0xd1, 0xc5, 0x00, 0xfa, 0x1a, 0x0a, 0x3c, 0xe9, 0x67, 0x3e, 0x35, 0x37,
	0x27, 0xd3, 0x0e, 0x9a, 0x6e, 0x1c, 0xa4, 0x09, 0x8b, 0x05, 0x36, 0x26, 0xd2, 0x58, 0x90, 0xec,
	0x84, 0x0a, 0xb3, 0xcc, 0xb7, 0x33, 0xd6, 0x26, 0xce, 0x57, 0x50, 0xca, 0x75, 0x72, 0x2b, 0x98,
	0x7b, 0x8e, 0x3c, 0xc8, 0x8d, 0x28, 0x93, 0x97, 0xba, 0xd7, 0xd1, 0x5f, 0xab, 0x9e, 0x9d, 0x7f,
	0x59, 0x6a, 0x7f, 0xa8, 0xf1, 0xab, 0x3d, 0xec, 0xbb, 0xe3, 0x01, 0xa4, 0x8d, 0xc6, 0x62, 0xe3,
	0x1b, 0x80, 0x54, 0x6e, 0x05, 0x2a, 0x68, 0xf6, 0x1f, 0xa4, 0x89, 0x91, 0x0d, 0xfa, 0x35, 0x14,
	0xf3, 0x64, 0xb5, 0x78, 0x4b, 0xf3, 0xdc, 0x00, 0x3d, 0x83, 0x25, 0x2e, 0xc8, 0x89, 0x8e, 0xcc,
	0x95, 0xa9, 0xbd, 0xc7, 0x30, 0xb6, 0xbb, 0xd2, 0x00, 0x6b, 0x3b, 0xe7, 0x35, 0x2c, 0x29, 0xca,
	0x6b, 0x4b, 0x1d, 0x82, 0x85, 0x8c, 0x5c, 0x0c, 0xef, 0xdc, 0xa4, 0x80, 0xde, 0x87, 0xf2, 0xf0,
	0x70, 0xa5, 0xbb, 0x77, 0xb9, 0x57, 0x86, 0x2a, 0x59, 0x45, 0x03, 0x22, 0x88, 0xf3, 0x31, 0xac,
	0x36, 0x33, 0xaa, 0x6e, 0x00, 0xa5, 0x87, 0x87, 0xf7, 0x6a, 0x57, 0xbc, 0xfb, 0xf8, 0x6f, 0xf3,
	0x50, 0xd1, 0x57, 0x47, 0xcd, 0x90, 0x70, 0x8e, 0xaa, 0x50, 0x3e, 0xe8, 0x78, 0xbb, 0xee, 0xab,
	0x76, 0xd3, 0xb5, 0xe7, 0xd0, 0x3d, 0xb8, 0xd3, 0x7c, 0xb3, 0xd3, 0xee, 0x78, 0xcf, 0xdd, 0x03,
	0xb7, 0xd7, 0x72, 0x1b, 0x3d, 0xec, 0xda, 0x16, 0xaa, 0x41, 0x45, 0xab, 0xbf, 0x75, 0xf7, 0xda,
	0x3f, 0xd8, 0xf3, 0xe8, 0x2e, 0xd4, 0x9e, 0xb7, 0xf7, 0xba, 0x9d, 0x03, 0xef, 0xb0, 0x7d, 0xe8,
	0xf6, 0xf6, 0x1b, 0x3f, 0xd8, 0x0b, 0xe8, 0x01, 0xdc, 0xfb, 0xbe, 0x7d, 0xd0, 0xed, 0xe1, 0x97,
	0xfb, 0xee, 0x41, 0xaf, 0xeb, 0xed, 0xb4, 0x3b, 0xdd, 0x56, 0xe3, 0x3b, 0xd7, 0x5e, 0x44, 0xf7,
	0xe1, 0x6e, 0xcf, 0x6d, 0x36, 0x0e, 0xbc, 0xbd, 0xf6, 0xf7, 0x2f, 0xdb, 0xbb, 0xad, 0xc6, 0xc1,
	0xee, 0x9e, 0x8b, 0xed, 0x25, 0xb4, 0x06, 0x48, 0xbe, 0x0a, 0xb7, 0x9b, 0xde, 0x6e, 0xa3, 0xd7,
	0xe8, 0x76, 0x5e, 0xe2, 0xa6, 0x6b, 0x17, 0x24, 0xd7, 0x6b, 0xdc, 0xee, 0xb9, 0x9d, 0x83, 0xbd,
	0x37, 0xde, 0xe1, 0x5e, 0xa3, 0xe7, 0x62, 0xb7, 0xb1, 0xeb, 0x62, 0xbb, 0x28, 0x27, 0xf3, 0xfd,
	0x61, 0x13, 0xe7, 0x93, 0x2e, 0xa1, 0x55, 0xb0, 0xf7, 0x1a, 0x3b, 0xcd, 0x37, 0x3d, 0xd7, 0x73,
	0x9b, 0xad, 0x8e, 0xb7, 0xfd, 0xf4, 0x0b, 0xbb, 0x7c, 0x8d, 0x76, 0xdb, 0x86, 0xb7, 0xb5, 0xdb,
	0x5f, 0xd8, 0x95, 0x6b, 0xb4, 0xdb, 0xf6, 0x32, 0x5a, 0x87, 0xb5, 0x56, 0x63, 0xbf, 0xbd, 0xd7,
	0xeb, 0x1c, 0x78, 0xfb, 0xed, 0x26, 0xee, 0xec, 0x35, 0x76, 0xbc, 0x6e, 0xaf, 0x81, 0xed, 0xea,
	0xe3, 0x4f, 0x60, 0x65, 0x72, 0x85, 0x51, 0x19, 0x96, 0xba, 0x3d, 0xf7, 0xb0, 0x6b, 0xcf, 0xa1,
	0x65, 0x28, 0x35, 0x0e, 0x1a, 0x7b, 0x6f, 0xba, 0xed, 0xae, 0x6d, 0x3d, 0xfd, 0xbb, 0x05, 0xc5,
	0xae, 0xbe, 0xea, 0x47, 0x14, 0x4a, 0xf9, 0x0d, 0x28, 0x7a, 0x3c, 0xad, 0x29, 0x9c, 0xbc, 0x6c,
	0x5f, 0xff, 0xf4, 0x56, 0x58, 0xbd, 0xe6, 0x5f, 0x58, 0xe8, 0x0f, 0x50, 0x19, 0xfb, 0xb7, 0x00,
	0x4d, 0x8b, 0x70, 0x75, 0xc1, 0xbf, 0x3e, 0xad, 0x41, 0x7d, 0xfb, 0x7f, 0x87, 0x1d, 0xf8, 0x5d,
	0x29, 0xff, 0x7f, 0xe2, 0xa8, 0xa0, 0x9e, 0x7e, 0xf1, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9,
	0x78, 0x5e, 0x94, 0x64, 0x19, 0x00, 0x00,
}
